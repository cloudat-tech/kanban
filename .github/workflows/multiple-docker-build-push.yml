name: multiple-docker-build-push

env:
  JFROG_REGISTRY: cloudattech.jfrog.io
  JFROG_REPO: container-repo 
  #JFROG_REGISTRY_USER: ${{ secrets.JFROG_REGISTRY_USER }}
  #JFROG_REGISTRY_PASSWORD: ${{ secrets.JFROG_REGISTRY_PASSWORD }}
  VAULT_TOKEN: ${{secrets.VAULT_TOKEN}}
  #OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  #OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: "amol-tapase-dev"
  APP_NAME: "kanban-app"
  TAG: "latest"

#on: [ workflow_dispatch]
on:
  workflow_dispatch:
  push:
    branches:
     - "main"

jobs:
  Build:
    name: Build
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./kanban-app/Dockerfile
            image: cloudattech.jfrog.io/container-repo/kanban-app
          - dockerfile: ./kanban-ui/Dockerfile
            image: cloudattech.jfrog.io/container-repo/kanban-ui
    permissions:
      contents: read
      packages: write

    steps:
        - name: Checkout Sourcecode
          uses: actions/checkout@v3
              
        - name: Import JFROG Secrets
          id: import-secrets
          uses: hashicorp/vault-action@v2
          with:
            method: token
            url: https://vault-public-vault-baebe7c1.3dda8bad.z1.hashicorp.cloud:8200
            namespace: admin/
            token: ${{ env.VAULT_TOKEN }}
            tlsSkipVerify: false
            #caCertificate: ${{ secrets.VAULT_CA_CERT }}
            secrets: |
                dev/data/repos JFROG_USER | JFROG_USER ; 
                dev/data/repos JFROG_PASSWORD | JFROG_PASSWORD
        #- run: echo $REGISTRY_USER

        #-  name: Set up Docker Buildx
           #uses: docker/setup-buildx-action@v2

        -  name: Login to Jfrog Repository
           uses: docker/login-action@v2
           with:
            registry: ${{ env.JFROG_REGISTRY }}
            username: ${{ steps.import-secrets.outputs.JFROG_USER }}
            password: ${{ steps.import-secrets.outputs.JFROG_PASSWORD }}
        
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
          with:
            images: ${{ matrix.image }}
        
        - name: Build and push
          uses: docker/build-push-action@v4
          with:
            context: .
            file: ${{ matrix.dockerfile }}
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
